name: Deploy Dev

on:
  push:
    branches: ["release/*"]

env:
  # GA variables
  AWS_CLOUDFRONT_ID: ${{ vars.AWS_CLOUDFRONT_ID_DEV }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_S3_BUCKET: ${{ vars.AWS_S3_BUCKET_DEV }}
  PROJECT: ${{ vars.PROJECT }}
  PROJECT_URL: ${{ vars.PROJECT_URL_DEV }}
  SLACK_CHANNEL: ${{ vars.SLACK_CHANNEL }}
  # GA secrets
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
  # VITE env
  VITE_API_ENDPOINT: ${{ vars.VITE_API_ENDPOINT_DEV }}
  VITE_GOOGLE_API_KEY: ${{ vars.VITE_GOOGLE_API_KEY_DEV }}
  # Firebase
  VITE_FIREBASE_API_KEY: ${{ vars.VITE_FIREBASE_API_KEY_DEV }}
  VITE_FIREBASE_AUTH_DOMAIN: ${{ vars.VITE_FIREBASE_AUTH_DOMAIN_DEV }}
  VITE_FIREBASE_PROJECT_ID: ${{ vars.VITE_FIREBASE_PROJECT_ID_DEV }}
  VITE_FIREBASE_STORAGE_BUCKET: ${{ vars.VITE_FIREBASE_STORAGE_BUCKET_DEV }}
  VITE_FIREBASE_MESSAGING_SENDER: ${{ vars.VITE_FIREBASE_MESSAGING_SENDER_DEV }}
  VITE_FIREBASE_APP_ID: ${{ vars.VITE_FIREBASE_APP_ID_DEV }}
  VITE_FIREBASE_MEASUREMENT_ID: ${{ vars.VITE_FIREBASE_MEASUREMENT_ID_DEV }}
  # Public asset
  VITE_PUBLIC_ENDPOINT: ${{ vars.AWS_PUBLIC_S3_ASSET_ENDPOINT_DEV }}
  # Stytch MFA
  VITE_STYTCH_PUBLIC_TOKEN: ${{ secrets.VITE_STYTCH_PUBLIC_TOKEN_DEV }}
  # Stripe Payment
  VITE_STRIPE_PUBLIC_TOKEN: ${{ vars.VITE_STRIPE_PUBLIC_TOKEN_DEV }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 3
          ref: ${{ github.head_ref }}
          token: ${{ secrets.GH_APP_PRIVATE_KEY }}
          persist-credentials: false

      - name: Set Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "yarn"

      - name: Run install
        run: yarn install --frozen-lockfile

      - name: Build bundle
        uses: borales/actions-yarn@v4
        with:
          cmd: build

      - name: Sync to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ env.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          SOURCE_DIR: "dist"

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ env.AWS_CLOUDFRONT_ID }}
          PATHS: "/*"
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: "Extract Git info"
        run: |
          echo "GITHUB_AUTHOR=$(git log -1 --pretty=format:'%an <%ae>' | xargs)" >> $GITHUB_ENV
          echo "GITHUB_REVISION=$(git rev-parse HEAD)" >> $GITHUB_ENV
          echo "GITHUB_REPO=$(git config --get remote.origin.url)" >> $GITHUB_ENV

          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          GITHUB_COMMITS=$(git --no-pager log --pretty=format:'%h - %an - %s' -n3 --no-color |  while read line || [ -n "$line" ]; do echo -n "- $line \\n"; done)
          echo "GITHUB_COMMITS<<$EOF" >> "$GITHUB_ENV"
          echo $GITHUB_COMMITS | sed "s/\"/'/g" >> "$GITHUB_ENV"
          echo "$EOF" >> "$GITHUB_ENV"

      - name: Slack Notification
        id: slack
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "channel": "${{ secrets.SLACK_CHANNEL }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":rocket: *${{ github.event.repository.name }} - Deployed to DEV*"
                  }
                },{
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Created by:* ${{ env.GITHUB_AUTHOR }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "```${{ env.GITHUB_COMMITS }}```"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View changes"
                      },
                      "style": "primary",
                      "url": "${{ env.GITHUB_REPO }}/commit/${{ env.GITHUB_REVISION}}"
                    },
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Site"
                      },
                      "style": "primary",
                      "url": "${{ env.PROJECT_URL }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
